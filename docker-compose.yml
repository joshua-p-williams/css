version: '3.3'
#https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose
#https://riptutorial.com/mysql/example/15570/simple-example-with-docker-compose
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: css-app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./env/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./env/nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  #MySQL Service
  db:
    image: mysql:8.0.33
    container_name: db
    restart: unless-stopped
    tty: true
    volumes:
      - ./.mysql-data/db:/var/lib/mysql
      #- ./env/mysql/my.cnf:/etc/mysql/my.cnf
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpw
      MYSQL_DATABASE: css
      MYSQL_USER: css
      MYSQL_PASSWORD: csspw
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-network

volumes:
    db_data: {}

#Docker Networks
networks:
  app-network:
    driver: bridge
